// <auto-generated />
using System;
using LedgerAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LedgerAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240805134029_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LedgerAPI.Model.Expense", b =>
                {
                    b.Property<int>("ExpenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.Property<int>("PaidByUserID")
                        .HasColumnType("int");

                    b.HasKey("ExpenseID");

                    b.HasIndex("GroupID");

                    b.HasIndex("PaidByUserID");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("LedgerAPI.Model.ExpenseParticipant", b =>
                {
                    b.Property<int>("ExpenseID")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantUserID")
                        .HasColumnType("int");

                    b.Property<decimal>("Share")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ExpenseID", "ParticipantUserID");

                    b.HasIndex("ParticipantUserID");

                    b.ToTable("ExpensesParticipant");
                });

            modelBuilder.Entity("LedgerAPI.Model.Group", b =>
                {
                    b.Property<int>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("LedgerAPI.Model.GroupMember", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("UserID", "GroupID");

                    b.HasIndex("GroupID");

                    b.ToTable("GroupMembers");
                });

            modelBuilder.Entity("LedgerAPI.Model.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PayeeID")
                        .HasColumnType("int");

                    b.Property<int>("PayerID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentID");

                    b.HasIndex("PayeeID");

                    b.HasIndex("PayerID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("LedgerAPI.Model.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LedgerAPI.Model.Expense", b =>
                {
                    b.HasOne("LedgerAPI.Model.Group", "Group")
                        .WithMany("Expenses")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LedgerAPI.Model.User", "PaidByUser")
                        .WithMany("PaidExpenses")
                        .HasForeignKey("PaidByUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("PaidByUser");
                });

            modelBuilder.Entity("LedgerAPI.Model.ExpenseParticipant", b =>
                {
                    b.HasOne("LedgerAPI.Model.Expense", "Expense")
                        .WithMany("ExpenseParticipants")
                        .HasForeignKey("ExpenseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LedgerAPI.Model.User", "ParticipantUser")
                        .WithMany("ExpenseParticipants")
                        .HasForeignKey("ParticipantUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Expense");

                    b.Navigation("ParticipantUser");
                });

            modelBuilder.Entity("LedgerAPI.Model.GroupMember", b =>
                {
                    b.HasOne("LedgerAPI.Model.Group", "Group")
                        .WithMany("GroupMembers")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LedgerAPI.Model.User", "User")
                        .WithMany("GroupMembers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LedgerAPI.Model.Payment", b =>
                {
                    b.HasOne("LedgerAPI.Model.User", "Payee")
                        .WithMany()
                        .HasForeignKey("PayeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LedgerAPI.Model.User", "Payer")
                        .WithMany()
                        .HasForeignKey("PayerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Payee");

                    b.Navigation("Payer");
                });

            modelBuilder.Entity("LedgerAPI.Model.Expense", b =>
                {
                    b.Navigation("ExpenseParticipants");
                });

            modelBuilder.Entity("LedgerAPI.Model.Group", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("GroupMembers");
                });

            modelBuilder.Entity("LedgerAPI.Model.User", b =>
                {
                    b.Navigation("ExpenseParticipants");

                    b.Navigation("GroupMembers");

                    b.Navigation("PaidExpenses");
                });
#pragma warning restore 612, 618
        }
    }
}
